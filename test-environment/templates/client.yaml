{{- range .Values.clientsConfiguration }}
{{- if .enabled }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ $.Values.environmentName }}-client-{{ .name }}
  labels:
    app: {{ $.Values.environmentName }}-client-{{ .name }}
spec:
  replicas: {{ .count }}
  selector:
    matchLabels:
      app: {{ $.Values.environmentName }}-client-{{ .name }}
  template:
    metadata:
      labels:
        app: {{ $.Values.environmentName }}-client-{{ .name }}
    spec:
      containers:
# Once nested range is entered, context from the outer one seems to be lost hence defining a variable that will allow
# accessing data.
{{- $extraEnvVariable := .extraEnv -}}
{{- $clientVersionVariable := .clientVersion -}}
{{- range $i := until (int .countPerPod) }}
        - name: fwclient-{{ $i }}
          image: "filewave/fwcld:{{ $clientVersionVariable }}"
          resources:
            requests:
              cpu: {{ $.Values.clientCpu }}
              memory: {{ $.Values.clientMemory }}
          env:
            - name: "FILEWAVE_SERVER_HOST"
              value: "{{ $.Values.serverHostname }}"
            - name: "FWCLD_SERVER_PORT"
              value: "20015"
            - name: "FWCLD_SERVER_PUB_PORT"
              value: "20005"
            # Template engine cannot combine metadata.name and $i variable directly.
            # POD_NAME will be evaluated during in runtime to form FWCLD_CLIENT_NAME.
            - name: "MY_POD_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: "FWCLD_CLIENT_NAME"
              value: "$(MY_POD_NAME)-{{ $i }}"
            - name: "FWCLD_DEBUG_LEVEL"
              value: "101"
            - name: "FILEWAVE_INSIDE_DOCKER_VERSION"
              value: "true"
{{- if $extraEnvVariable }}
{{- range $key, $value := $extraEnvVariable }}
            - name: {{ $key | quote }}
{{- /*
Reason for logic being placed here is that templating doesn't work in Values file. The idea is to make it
convenient in Values to specify just a Booster's name and everything will be taken care of under the hood.
*/ -}}
{{- if and (regexMatch "FWCLD_BOOSTER[0-9]+_HOST" $key) (not (eq $value $.Values.serverHostname)) }}
              value: {{ $.Values.environmentName }}-booster-{{ $value }}-svc
{{- else }}
              value: {{ $value | quote }}
{{- end }}
{{- end }}
{{- end }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo \"$(nslookup {{ $.Values.environmentName }}-server-svc | grep \"Name\" -A1 | grep \"Address\" | cut -d' ' -f2) {{ $.Values.serverHostname }}\" >> /etc/hosts"]
{{- end }}
      imagePullSecrets:
        - name: regcred
{{- end }}
{{- end }}
