## SINGLE SERVER

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: fwserver-{{ .Values.name }}
  labels:
    app: fwserver-{{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fwserver-{{ .Values.name }}
  template:
    metadata:
      labels:
        app: fwserver-{{ .Values.name }}
    spec:
      containers:
      - name: mdm-server
        image: filewave/fwserver:{{ .Values.version }}
        resources:
          requests:
            memory: "{{ .Values.memoryGi }}Gi"
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo 127.0.0.1 {{ .Values.host }} >> /etc/hosts"]
        livenessProbe: # restart services when this is REALLY BORKED 
          httpGet:
            path: /api/config/app
            port: 443
            scheme: HTTPS
          periodSeconds: 10         # once every 10 seconds
          timeoutSeconds: 5         # timeout if no reply in 5 seconds
          failureThreshold: 10      # failure after 10 attempts with no answer 
          initialDelaySeconds: 100  # dont check for the first 200 seconds after pod creation
        readinessProbe: # traffic to this pod is suspended when the probe fails
          httpGet:
            path: /api/config/app
            port: 443
            scheme: HTTPS
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
          - mountPath: "/fwxserver/DB"
            name: ssd-vol-{{ .Values.name }}
            subPath: db
          - mountPath: "/private/var/log/FWAdmin Audit"
            name: standard-vol-{{ .Values.name }}
            subPath: audit
          - mountPath: "/fwxserver/Data Folder"
            name: standard-vol-{{ .Values.name }}
            subPath: data-folder
          - mountPath: "/usr/local/filewave/apache/conf"
            name: standard-vol-{{ .Values.name }}
            subPath: apache-conf 
          - mountPath: "/usr/local/filewave/apache/logs"
            name: standard-vol-{{ .Values.name }}
            subPath: apache-logs 
          - mountPath: "/usr/local/filewave/postgresql/conf"
            name: standard-vol-{{ .Values.name }}
            subPath: postgres-conf
          - mountPath: "/usr/local/filewave/postgresql/log"
            name: standard-vol-{{ .Values.name }}
            subPath: postgres-log
          - mountPath: "/usr/local/filewave/certs"
            name: standard-vol-{{ .Values.name }}
            subPath: certs
          - mountPath: "/usr/local/filewave/fwcld"
            name: standard-vol-{{ .Values.name }}
            subPath: fwcld
          - mountPath: "/usr/local/filewave/ipa"
            name: standard-vol-{{ .Values.name }}
            subPath: ipa
          - mountPath: "/usr/local/filewave/log"
            name: standard-vol-{{ .Values.name }}
            subPath: log
          - mountPath: "/usr/local/filewave/media"
            name: standard-vol-{{ .Values.name }}
            subPath: media
          - mountPath: "/usr/local/filewave/tmp"
            name: standard-vol-{{ .Values.name }}
            subPath: tmp
          - mountPath: "/usr/local/filewave/scripts"
            name: standard-vol-{{ .Values.name }}
            subPath: scripts

        ports:
        - containerPort: 443 #http
        - containerPort: 20443 #http
        - containerPort: 20445 #http
        - containerPort: 20446 #http
        - containerPort: 20005 #tcp
        - containerPort: 20006 #tcp
        - containerPort: 20015 #tcp
        - containerPort: 20016 #tcp
        - containerPort: 20017 #tcp       
        - containerPort: 20013 # tcp
        
      volumes:
      - name: standard-vol-{{ .Values.name }}
        persistentVolumeClaim:
          claimName: fwserver-standard-{{ .Values.name }}
      - name: ssd-vol-{{ .Values.name }}
        persistentVolumeClaim:
          claimName: fwserver-ssd-{{ .Values.name }}
      imagePullSecrets:
        - name: regcred